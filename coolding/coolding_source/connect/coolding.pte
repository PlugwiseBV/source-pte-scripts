<%
// @author Ersin Topuz (eto)

Function Airco($id, $commands, $now, $type, $sed_type, $uuid)

  // All directories
  $s = System.Path
  $directories = {
    "last_command" => $s+"/coolding/cache/states/last_coolding_command_"+$uuid+".txt",
    "coolding_ip"  => $s+"/coolding/cache/ip/coolding_"+$id+".txt",
    "last_ip"      => $s+"/coolding/cache/ip/coolding_lastip_"+$id+".txt",
    "log_file"     => $s+"/coolding/log.txt",
    "schedules"    => $s+"/sys/schedules/"
  }

  // Log is true
  $log = True

  if($log)
    if(!File.Exists($directories['log_file']))
    writeFile($directories, $directories['log_file'], "")
    writeFile($directories, $directories['log_file'], "  _____  _                      _ ")
    writeFile($directories, $directories['log_file'], " |  __ \\| |                    (_) ")
    writeFile($directories, $directories['log_file'], " | |__) | |_   _  __ ___      ___ ___  ___ ")
    writeFile($directories, $directories['log_file'], " |  ___/| | | | |/ _` \\ \\ /\\ / / / __|/ _ \\ ")
    writeFile($directories, $directories['log_file'], " | |    | | |_| | (_| |\\ V  V /| \\__ \\  __/ ")
    writeFile($directories, $directories['log_file'], " |_|    |_|\\__,_|\\__, | \\_/\\_/ |_|___/\\___| ")
    writeFile($directories, $directories['log_file'], "                  __/ | ")
    writeFile($directories, $directories['log_file'], "                 |___/")
    writeFile($directories, $directories['log_file'], "")
    writeFile($directories, $directories['log_file'], " Hi there, nice to meet you!");
    /if
    writeFile($directories, $directories['log_file'], "")
    writeFile($directories, $directories['log_file'], "~~~~~~~~~~~~~~~~~~~~ Begin log")
  /if

  // Request new ipaddress when cache is empty
  writeFile($directories, $directories['log_file'], "")
  writeFile($directories, $directories['log_file'], "--- IP Section ---")
  $ip = Renewip($id, $directories)
  writeFile($directories, $directories['log_file'], "--- End of IP Section ---")
  writeFile($directories, $directories['log_file'], "")
  
  if($log)
    writeFile($directories, $directories['log_file'], "")
    writeFile($directories, $directories['log_file'], "===========================")
    writeFile($directories, $directories['log_file'], " Timestamp: "+DateTime())
    writeFile($directories, $directories['log_file'], " SED: "+$sed_type)
    writeFile($directories, $directories['log_file'], " Type event: "+$type)
    writeFile($directories, $directories['log_file'], " ip: "+$ip)
    writeFile($directories, $directories['log_file'], "===========================")
    writeFile($directories, $directories['log_file'], "")
  /if


  if($log)
    writeFile($directories, $directories['log_file'], "")
    writeFile($directories, $directories['log_file'], "=========== Extra debug information ===========")
    writeFile($directories, $directories['log_file'], " ID: "+($id))
    writeFile($directories, $directories['log_file'], " Commands: "+($commands))
    writeFile($directories, $directories['log_file'], " UUID: "+($uuid))
    writeFile($directories, $directories['log_file'], " Now: "+($now))
    writeFile($directories, $directories['log_file'], " IP: "+($ip))
    writeFile($directories, $directories['log_file'], " Directories: "+($directories))
    writeFile($directories, $directories['log_file'], " Log: "+($log))
    writeFile($directories, $directories['log_file'], "===========================")
    writeFile($directories, $directories['log_file'], "")
  /if


  onlineLog($sed_type, $uuid, $id, '[{ "type": "init", "now": "'+($now)+'", "type": "'+($type)+'", "ip": "'+($ip)+'" }], 0)

  if($sed_type==5)

    // Multiply Plugwise Schedule 
    $now = $now*10

    CooldingSense($id, $commands, $uuid, $now, $ip, $directories, ReadLastCommand($directories, $id, $ip), $log)
  /if

  if($sed_type==6)
    writeFile($directories, $directories['log_file'], "uitvoeren Scan")


    CooldingScan($id, $commands, $now, $ip, $directories, ReadLastCommand($directories, $id, $ip), $log)
  /if

  if($sed_type==3)
    writeFile($directories, $directories['log_file'], "uitvoeren Switch")

    CooldingSwitch($id, $commands, $now, $ip, $directories, ReadLastCommand($directories, $id, $ip), $log)
  /if



  if($log)
    writeFile($directories, $directories['log_file'], "~~~~~~~~~~~~~~~~~~~~ End of logs")
    writeFile($directories, $directories['log_file'], " ")
  /if
/Function

Function checkLastCommand($id, $command, $url, $log, $lcommand, $directories, $new_status, $old_status)


  if $lcommand == undefined
    $lcommands = '' 
  else
    $lcommands = $lcommand
  /if

  if($lcommands==$command)
    if File.Exists($directories['last_command'])
      File.Delete($directories['last_command'])
    /if
    writeFile($directories, $directories['last_command'], $command)

    if($log)
      writeFile($directories, $directories['log_file'], $old_status)
    /if
  else
    File.Delete($directories['last_command'])
    if($log)
      writeFile($directories, $directories['log_file'], $new_status)
    /if
    $command_run = 1
    $result = Http.Get($url, 'smile', $id)
    writeFile($directories, $directories['last_command'], $command)
  /if
  return {"result"=>$result, "command_run"=>$command_run}
/Function

Function validateResult($id, $result, $command_run, $directories, $log)
    // When a command is called

      writeFile($directories, $directories['log_file'], "validate result")
    if($command_run==1)
      if($log)
        writeFile($directories, $directories['log_file'], "Command called = true")
        writeFile($directories, $directories['log_file'], "Result page: " +$result[0]+$result[1])
      /if

      if($result!="ok\n")
        if($log)
          writeFile($directories, $directories['log_file'], "Coolding can not be found, ip address is changed?")
          writeFile($directories, $directories['log_file'], "Renewing ip address; Current ip address: "+$ip+" and result page: "+$result)
        /if

        File.Delete($directories['last_command'])
        writeFile($directories, $directories['last_command'], "0")
        File.Delete($directories['coolding_ip'])

        $ip = Renewip($id, $directories)
        if($log)
            writeFile($directories, $directories['log_file'], "IP has found: "+$ip)
        /if

        // Now the ip address is fixed, run the command one more time!
        CooldingSense($id, $commands, $uuid, $now, $ip, $directories, $lcommand, $log)

        if($log)
          writeFile($directories, $directories['log_file'], "New ip address"+$ip)
        /if 
      /if
    /if
/Function

Function CooldingSwitch($id, $commands, $now, $ip, $directories, $lcommand, $log)
writeFile($directories, $directories['log_file'], "Coolding Switch function")
  $on_url = 'http://'+$ip+'/ir/play?id='+$commands['on_id']
  $off_url = 'http://'+$ip+'/ir/play?id='+$commands['off_id']


  writeFile($directories, $directories['log_file'], "now="+$now)
  writeFile($directories, $directories['log_file'], "lcommand="+$lcommand)

  if($now==true)
    if($lcommand==$on_url)
        writeFile($directories, $directories['log_file'], "Switch is already on, nothing to do..")
        onlineLog(3, $commands['on_id'], $id, '[{ "type": "should turn on (already on)", "last_command": "'+($lcommand)+'", "on_url": "'+($on_url)+'" }], 0)
    Else
      writeFile($directories, $directories['log_file'], "[!] Switch turned on; now is true")

      onlineLog(3, $commands['on_id'], $id, '[{ "type": "turn on", "now": "'+($now)+'", "last_command": "'+($lcommand)+'", "on_url": "'+($on_url)+'" }], 1)

      $result = Http.Get($on_url, 'smile', $id)
      writeFile($directories, $directories['last_command'], $commands['on_id'])

    /if
  Else
    if($lcommand==$off_url)
     writeFile($directories, $directories['log_file'], "Switch is already off, nothing to do..")
     onlineLog(3, $commands['off_id'], $id, '[{ "type": "should turn off (already off)", "last_command": "'+($lcommand)+'", "off_url": "'+($off_url)+'" }], 1)
    Else
      writeFile($directories, $directories['log_file'], "[!] Switch turned off; now is false")

      onlineLog(3, $commands['off_id'], $id, '[{ "type": "turn off", "last_command": "'+($lcommand)+'", "off_url": "'+($off_url)+'" }], 1)

      $result = Http.Get($off_url, 'smile', $id)
      writeFile($directories, $directories['last_command'], $commands['off_id'])

      writeFile($directories, $directories['log_file'], "url: "+$off_url)


    /if
  /If


    writeFile($directories, $directories['log_file'], "result: "+$result[0]+$result[1])


  if($result!="ok\n")
    if($log)
      writeFile($directories, $directories['log_file'], "Coolding can not be found, ip address is changed?")
      writeFile($directories, $directories['log_file'], "Renewing ip address; Current ip address: "+$ip+" and result page: "+$result)
    /if
    File.Delete($directories['last_command'])
    writeFile($directories, $directories['last_command'], "0")
    File.Delete($directories['coolding_ip'])

    $ip = Renewip($id, $directories)

    // Now the ip address is fixed, run the command one more time!
    CooldingScan($id, $commands, $now, $ip, $directories, $lcommand, $log)

    if($log)
      writeFile($directories, $directories['log_file'], "New ip address"+$ip)
    /if
  /if
/Function


Function CooldingScan($id, $commands, $now, $ip, $directories, $lcommand, $log)
  $on_url = 'http://'+$ip+'/ir/play?id='+$commands['on_id']
  $off_url = 'http://'+$ip+'/ir/play?id='+$commands['off_id']



  if($now==true)
    writeFile($directories, $directories['log_file'], "Scan turned on; now is true")

    onlineLog(6, $commands['on_id'], $id, '[{ "type": "turn on" }], 1)

    $result = Http.Get($on_url, 'smile', $id)
    writeFile($directories, $directories['last_command'], $commands['on_id'])

  Else
    writeFile($directories, $directories['log_file'], "Scan turned off; now is false")
    onlineLog(6, $commands['off_id'], $id, '[{ "type": "turn off" }], 0)

    $result = Http.Get($off_url, 'smile', $id)
    writeFile($directories, $directories['last_command'], $commands['off_id'])

    writeFile($directories, $directories['log_file'], "url: "+$off_url)

  /If


    writeFile($directories, $directories['log_file'], "result: "+$result[0]+$result[1])



  if($result!="ok\n")
    if($log)
      writeFile($directories, $directories['log_file'], "Coolding can not be found, ip address is changed?")
      writeFile($directories, $directories['log_file'], "Renewing ip address; Current ip address: "+$ip+" and result page: "+$result)
    /if
    File.Delete($directories['last_command'])
    writeFile($directories, $directories['last_command'], "0")
    File.Delete($directories['coolding_ip'])

    $ip = Renewip($id, $directories)

    // Now the ip address is fixed, run the command one more time!
    CooldingScan($id, $commands, $now, $ip, $directories, $lcommand, $log)

    if($log)
      writeFile($directories, $directories['log_file'], "New ip address"+$ip)
    /if
  /if
/Function


Function CooldingSense($id, $commands, $uuid, $now, $ip, $directories, $lcommand, $log)

  if($log)
    writeFile($directories, $directories['log_file'], "~~ Begin coolding Sense env ~~")
  /if

  $year  = DateTime().Format("yyyy")
  $month = DateTime().Format("MM")
  $day   = DateTime().Format("dd")

  if($log)
    writeFile($directories, $directories['log_file'], "~~ year "+($year)+" - month "+($month)+" - day "+($day)+" ~~")
  /if

  $calendar_ = $commands['calendar']
  if($commands['calendar']=='')
    $calendar_ = ''
  /if
  $schedule_ = ($directories["schedules"])+''+($calendar_)+".pte"
  $schedule = $schedule_

  if($log)
   writeFile($directories, $directories['log_file'], "~~ calendar "+($calendar_)+" ~~")
    writeFile($directories, $directories['log_file'], "~~ directorie schedule "+($directories["schedules"])+" ~~")
    writeFile($directories, $directories['log_file'], "~~ command calendar "+($commands["calendar"])+" ~~")
    writeFile($directories, $directories['log_file'], "~~ schedule "+($schedule_)+" ~~")
  /if


  if File.Exists($schedule_)

    if($log)
      writeFile($directories, $directories['log_file'], "~~ Schedule exists "+($calendar_)+" ~~")

    /if
    Include "sys/schedules/"+$calendar_+".pte";

    writeFile($directories, $directories['log_file'], "~~ loops in days "+($days)+" ~~")

    foreach $days as $dayloop
      if float($dayloop.year) == float($year)
        if float($dayloop.month) == float($month)
          if float($dayloop.day) == float($day)
            // new uuid
            $uuid = $dayloop.id
          /if
        /if
      /if
    /foreach
  /if

  if($log)
    writeFile($directories, $directories['log_file'], "~~ End of file exists schedule ~~")
  /if

  // Coolding play URL
  $eco_on_url = 'http://'+$ip+'/ir/play?id='+$commands['eco_on_id']

  if($log)
    writeFile($directories, $directories['log_file'], "~~ eco on url "+($eco_on_url)+" ~~")
  /if

  $eco_off_url = 'http://'+$ip+'/ir/play?id='+$commands['eco_off_id']

  if($log)
    writeFile($directories, $directories['log_file'], "~~ eco off url "+($eco_off_url)+" ~~")
  /if

  $on_url = 'http://'+$ip+'/ir/play?id='+$commands['on_id']

  if($log)
    writeFile($directories, $directories['log_file'], "~~ on url "+($on_url)+" ~~")
  /if

  $off_url = 'http://'+$ip+'/ir/play?id='+$commands['off_id']

  if($log)
    writeFile($directories, $directories['log_file'], "~~ off url "+($off_url)+" ~~")
  /if

  // When command is run, switch to true
  $command_run = 0

  // Calculate the mount of Quarters
  $quarter = CalculateQuarters($log, $directories)

  $d = DateTime()

  if($log)
    writeFile($directories, $directories['log_file'], "~~ Quarter: "+($quarter)+" ~~")
  /if

  // Begin the schedule loop
  foreach Plugwise.Schedules as $schedule

    // When the correct schedule if found
    if($uuid==$schedule.UUId)

      if $lcommand == undefined
        $lcommands = '' 
      else
        $lcommands = $lcommand
      /if

      if($d.Weekday==0)
        $day = 6
      else
        $day = $d.Weekday-1
      /if


      if($schedule.Values[($day)][$quarter]==0)
        if($log)
          writeFile($directories, $directories['log_file'], "~~ Scheme value: "+($schedule.Values[$day][$quarter]))
          writeFile($directories, $directories['log_file'], "~~ Sense temp: "+($now))
          writeFile($directories, $directories['log_file'], "~~ All command: "+($commands))
          writeFile($directories, $directories['log_file'], "~~ Last command: "+($lcommands))
        /if

        if($lcommands==($commands['off_id']))
          if($log)
            writeFile($directories, $directories['log_file'], "[!] Hmm, according to the last command it seems its already off")
            onlineLog(5, $uuid, $id, '[{ "type": "sense - already off", "quarter": "'+($quarter)+'", "schema_value": "'+($schedule.Values[$day][$quarter])+'" }], 0)
          /if
         else
           File.Delete($directories['last_command'])
           if($log)
             writeFile($directories, $directories['log_file'], "[!] I will send an off command")
           /if
           $command_run = 1
           $result = Http.Get($off_url, 'smile', $id)
           writeFile($directories, $directories['last_command'], $commands['off_id']+'_off')
           onlineLog(5, $uuid, $id, '[{ "type": "sense - send off command", "quarter": "'+($quarter)+'", "schema_value": "'+($schedule.Values[$day][$quarter])+'" }], 1)
        /if
      Elseif($schedule.Values[($day)][$quarter]==-1)
        if($log)
          writeFile($directories, $directories['log_file'], "~~ Scheme value: "+($schedule.Values[$day][$quarter]))
          writeFile($directories, $directories['log_file'], "~~ Sense temp: "+($now))
          writeFile($directories, $directories['log_file'], "~~ All command: "+($commands))
          writeFile($directories, $directories['log_file'], "~~ Last command: "+($lcommands))
        /if
        if($lcommands==($commands['on_id']))
          if($log)
            writeFile($directories, $directories['log_file'], "[!] Hmm, according to the last command it seems its already on")
            onlineLog(5, $uuid, $id, '[{ "type": "sense - already on", "quarter": "'+($quarter)+'", "schema_value": "'+($schedule.Values[$day][$quarter])+'" }], 0)
          /if
         else
           File.Delete($directories['last_command'])
           if($log)
             writeFile($directories, $directories['log_file'], "[!] I will send an on command")
           /if
           $command_run = 1
           $result = Http.Get($on_url, 'smile', $id)
           writeFile($directories, $directories['last_command'], ($commands['on_id'])+'_on')
           onlineLog(5, $uuid, $id, '[{ "type": "sense - send on command", "quarter": "'+($quarter)+'", "schema_value": "'+($schedule.Values[$day][$quarter])+'" }], 1)
        /if
      else

        // Calculate the upper and lower ratio
        $upper_limit = ($schedule.Values[($day)][$quarter]+$commands['upper_ratio']);
        $lower_limit = ($schedule.Values[($day)][$quarter]-$commands['lower_ratio']);

        if($log)
          writeFile($directories, $directories['log_file'], "quarter: "+$quarter)
          writeFile($directories, $directories['log_file'], "Upper limit: "+$upper_limit)
          writeFile($directories, $directories['log_file'], "Lower limit: "+$lower_limit)
          writeFile($directories, $directories['log_file'], "Scheme value: "+$schedule.Values[$day][$quarter])
          writeFile($directories, $directories['log_file'], "Sense temp: "+$now)

          writeFile($directories, $directories['log_file'], "All command: "+$commands)
          writeFile($directories, $directories['log_file'], "Last command: "+$lcommands)
        /if

        if($upper_limit<$now)
          if($lcommands==($commands['eco_on_id']))
            if($log)
              writeFile($directories, $directories['log_file'], "[!] Exceeding the average - Already on!")
              onlineLog(5, $uuid, $id, '[{ "type": "sense - exceeding the average - already on ", "command_now": "'+($commands['eco_off_id'])+'", "last_command": "'+($lcommands)+'", "upper_limit": "'+($lower_limit)+'", "now": "'+($now)+'", "quarter": "'+($quarter)+'", "schema_value": "'+($schedule.Values[$day][$quarter])+'" }], 0)
            /if
           else
             File.Delete($directories['last_command'])
             if($log)
               writeFile($directories, $directories['log_file'], "[!] Exceeding the average - Turn on command!")
             /if
             $command_run = 1
             $result = Http.Get($eco_on_url, 'smile', $id)
             writeFile($directories, $directories['last_command'], $commands['eco_on_id']+"_eco_on")
             onlineLog(5, $uuid, $id, '[{ "type": "sense - exceeding the average - send on ", "command_now": "'+($commands['eco_off_id'])+'", "last_command": "'+($lcommands)+'", "upper_limit": "'+($lower_limit)+'", "now": "'+($now)+'", "quarter": "'+($quarter)+'", "schema_value": "'+($schedule.Values[$day][$quarter])+'" }], 1)
          /if
        /if

       if($lower_limit>$now)
         if($lcommands==($commands['eco_off_id']))
           if($log)
             writeFile($directories, $directories['log_file'], "[!] Below the norm - already off")
             onlineLog(5, $uuid, $id, '[{ "type": "sense - below the norm - already off ", "command_now": "'+($commands['eco_off_id'])+'", "last_command": "'+($lcommands)+'", "upper_limit": "'+($lower_limit)+'", "now": "'+($now)+'", "quarter": "'+($quarter)+'", "schema_value": "'+($schedule.Values[$day][$quarter])+'" }], 0)
           /if
         else
           File.Delete($directories['last_command'])
           if($log)
             writeFile($directories, $directories['log_file'], "[!] Below the norm - Turn off command!")
           /if
           $command_run = 1
           $result = Http.Get($eco_off_url, 'smile', $id)
           writeFile($directories, $directories['last_command'], $commands['eco_off_id']+'_eco_off')
           onlineLog(5, $uuid, $id, '[{ "type": "sense - below the norm - send off ", "command_now": "'+($commands['eco_off_id'])+'", "last_command": "'+($lcommands)+'", "upper_limit": "'+($lower_limit)+'", "now": "'+($now)+'", "quarter": "'+($quarter)+'", "schema_value": "'+($schedule.Values[$day][$quarter])+'" }], 1)
         /if
      /if



        writeFile($directories, $directories['log_file'], "lower limit "+$lower_limit)

        writeFile($directories, $directories['log_file'], "upper limit "+$upper_limit)

        writeFile($directories, $directories['log_file'], "now "+$now)
// This one will ocur when there is a range; e.g. avg: 240, upper: 250, below: 230
// When the current temp is 245 it will be between this range, and nothing will happen..
   if($upper_limit>$now)
     if($lower_limit<$now)
       if($log)
        writeFile($directories, $directories['log_file'], "[!] Inside the limitations")
       /if
     /if
   /if
  

    /if


    // When a command is called
    if($command_run==1)
      if($log)
        writeFile($directories, $directories['log_file'], "Command called = true")
        writeFile($directories, $directories['log_file'], "Result page: " +$result[0]+$result[1])
      /if

      if($result!="ok\n")
        if($log)
          writeFile($directories, $directories['log_file'], "Coolding can not be found, ip address is changed?")
          writeFile($directories, $directories['log_file'], "Renewing ip address; Current ip address: "+$ip+" and result page : "+$result)
        /if

        File.Delete($directories['last_command'])
        writeFile($directories, $directories['last_command'], "0")
        File.Delete($directories['coolding_ip'])

        $ip = Renewip($id, $directories)

        // Now the ip address is fixed, run the command one more time!
        CooldingSense($id, $commands, $uuid, $now, $ip, $directories, $lcommand, $log)


      /if
    /if
/if
 /foreach


 if($log)
  writeFile($directories, $directories['log_file'], "End of function Coolding Sense")
 /if

 /Function



Function Renewip($id, $directories)
   $adres = 'https://auth.plugwise.net/announce/'+$id+'.json?callback=coolding'

  writeFile($directories, $directories['log_file'], " Is the ip address already known for: "+($id)+"?")

  if File.Exists($directories['coolding_ip'])
    $get_ip = File.Read($directories['coolding_ip'])
    $ip = $get_ip[0]
    writeFile($directories, $directories['log_file'], " Yes it is. IP is already known: "+$ip)
  else
     $data = Http.Get($adres)

     writeFile($directories, $directories['log_file'], " No its not, so we requested a new beacon from plugwise: "+$data)

     $wifi_ip = RegEx.Match('"wifi_ip":"(.*?)"', $data)
     $lan_ip = RegEx.Match('"lan_ip":"(.*?)"', $data)

    if $wifi_ip[1] == undefined
      $ip = $lan_ip[1]
     else
      $ip = $wifi_ip[1]
    /if

    // When wifi address cant open
    if File.Exists($directories['last_ip'])
      $last_ip = File.Read($directories['last_ip'])

        if($last_ip==$wifi_ip[1])
          if $lan_ip != undefined
            $ip = $lan_ip[1]
          /if
        /if
      
    /if


    writeFile($directories, $directories['last_ip'], $ip)
    writeFile($directories, $directories['coolding_ip'], $ip)
    writeFile($directories, $directories['log_file'], "new ip: "+$ip+" - "+$directories['coolding_ip'])
  /if
  writeFile($directories, $directories['log_file'], "returning new ip: "+$ip)
  return ($ip)
/Function



// Time calculation
Function CalculateQuarters($log, $directories)
  if($log)
    writeFile($directories, $directories['log_file'], "~~ Calculate quarters ~~")
  /if

  $d = DateTime()

  if($log)
    writeFile($directories, $directories['log_file'], "~~ eco on url "+($d)+" ~~")
  /if

  $quarter = 0
  if($d.Hour>0)
    $quarter += ($d.Hour*4)
  /if
  if($d.Minute>=0)
    if($d.Minute<=14)
      $quarter += 0
    /if
  /if
  if($d.Minute>=15)
    if($d.Minute<=29)
      $quarter += 1
    /if
  /if
  if($d.Minute>=30)
     if($d.Minute<=44)
       $quarter += 2
     /if
  /if
  if($d.Minute>=45)
    $quarter += 3
  /if
  return $quarter
/Function

// Latest commando
Function ReadLastCommand($directories, $id, $ip)

  writeFile($directories, $directories['log_file'], "--- Last command Section ---")


  writeFile($directories, $directories['log_file'], " Fetching last played command")
  $data = Http.Get('http://'+$ip+'/ir/sequences/lastplayed', 'smile', $id)

  $command = RegEx.Match("sequence id='(.*?)'", $data)

  // Check Last command file
  if $command[1] != undefined
    writeFile($directories, $directories['log_file'], " We are communicating with coolding, last played coolding command: "+$command[1])
    writeFile($directories, $directories['last_command'], $command[1])
    $lcommand = $command[1]
  else
    writeFile($directories, $directories['log_file'], " Connection errors/Retrieving problems: "+($data))
    writeFile($directories, $directories['last_command'], "0")
    $lcommand = "0"
  /if
  writeFile($directories, $directories['log_file'], " Last command = "+$lcommand)
  writeFile($directories, $directories['log_file'], "--- End of last command Section ---")
  writeFile($directories, $directories['log_file'], "")
  return $lcommand

/Function


Function writeFile($directories, $file, $message)
  File.AppendLine($file, $message)
/Function

Function onlineLog($sedtype, $sedid, $cooldingid, $options, $command_called)
  Include "coolding/connect/api.pte"

  $license_key = Plugwise.License
  $version = '0.01'

  $url = 'https://api.thingspeak.com/update.json?api_key='+($api_key)+'&name='+($api_name)+'&field1='+($license_key)+'&field2='+($sedtype)
  $url += '&field3='+($sedid)+'&field4='+($cooldingid)+'&field5='+($options)+'&field6='+($command_called)+'&field7='+(DateTime())+'&field8='+$version
  Http.Post($url, {0})

/Function
%>
